<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="600" minHeight="600" width="900" height="600">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
				
		<s:RemoteObject id="craneUtil" destination="UtilDestination" result="" 
						fault="Alert.show(event.fault.faultString, 'Error to Klimchuk :)');"/>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.utils.ArrayUtil;
			
			import spark.events.IndexChangeEvent;
			
			
			[Bindable] //чтобы можно было привязывать к гриду 
			private var initCasesToDG:ArrayCollection; //начальная выборка прецедентов
			

			protected function button1_clickHandler(event:MouseEvent):void
			{
				craneUtil.getInitialCasesLight(); //было: craneUtil.getInitialCasesLight(); 
				initCasesToDG = craneUtil.getInitialCasesLight.lastResult as ArrayCollection; //было: initCasesToDG = craneUtil.getInitialCasesLight.lastResult as ArrayCollection;
				//можно использовать программную сортировку: mainDG.dataProvider = sortCollection(initCasesToDG, "viazkost");
				columnchart1.dataProvider = initCasesToDG; //.list;//но работает и без .list
				
				piechart1.dataProvider = initCasesToDG;
				
				ilist.dataProvider = initCasesToDG;
				
				idlist.dataProvider = initCasesToDG; 
				
				droplist.dataProvider = initCasesToDG;
				
				plotchart1.dataProvider = initCasesToDG;
			}


			protected function combobox1_changeHandler(event:IndexChangeEvent):void
			{
	 			// TODO Auto-generated method stub
				switch (gridTypeCB.selectedIndex) {
					case 0:
						aaa.text = "clustered!"; 
						break;

						
					case 1:
						aaa.text = "stacked!";break;

					default:
						aaa.text = "default!";break;

				} 
				
				columnchart1.type = gridTypeCB.selectedItem;
			}
		

			protected function idlist_changeHandler(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
				Alert.show(idlist.selectedItem);
				
			}

			//ожно обрабатывать клики по клики по данным
			protected function plotchart1_itemClickHandler(event:ChartItemEvent):void
			{
				// TODO Auto-generated method stub
				help.text = event.hitData.displayText;// + " / " 
					/*	+ event.hitData.item; +" / "
						 	+ event.hitData.chartItem +" / "
							+ event.hitData.element +" / "
							+ event.hitData.id +" / "
							+ event.localX + " / " 
							+ event.localY; */
			}

		]]>	
	</fx:Script>			
	
	<mx:Accordion x="0" y="0" width="100%" height="100%" dropShadowVisible="false" cornerRadius="0">
		<s:NavigatorContent label="Accordion Pane 1" width="100%" height="100%">
			
			<s:Button label="Get crane List"
					  click="button1_clickHandler(event)" x="351" y="10"/>
			
			
			<mx:ColumnChart x="5" y="81" id="columnchart1" width="872" height="394" showDataTips="true" type="100%">
				
				<mx:horizontalAxis>
					<mx:CategoryAxis categoryField="id"/>
				</mx:horizontalAxis> 
				<mx:series>
					<mx:ColumnSeries displayName="Коррозия"  xField="id" yField="corrosion"/>
					<mx:ColumnSeries displayName="Прогиб"  xField="id" yField="progib"/>
					<mx:ColumnSeries displayName="Вязкость"  xField="id" yField="viazkost"/>
					<mx:ColumnSeries displayName="Срок"  xField="id" yField="srok"/>
				</mx:series>
			</mx:ColumnChart>
			
			
			<mx:Legend dataProvider="{columnchart1}" width="240"/>
			<s:ComboBox id="gridTypeCB" x="545" y="13" change="combobox1_changeHandler(event)" selectedIndex="0" >
						
				<s:dataProvider>
					<s:ArrayList>
						<fx:String>clustered</fx:String> 
						<fx:String>stacked</fx:String>
						<fx:String>100%</fx:String>
						<fx:String>overlaid</fx:String>
					</s:ArrayList>
				</s:dataProvider> 
			</s:ComboBox>
			<s:Label x="717" y="15" text="Label" id="aaa" width="93"/>
			
		</s:NavigatorContent>
		<s:NavigatorContent label="wew" width="100%" height="100%">
			
			
			<mx:PieChart  x="257" y="81" id="piechart1" width="482" showDataTips="true" innerRadius=".3">
			
				<mx:series>
					<mx:PieSeries displayName="Series 1" field="progib" nameField="Прогиб"
								  labelPosition="callout"    />
					<!--<mx:PieSeries displayName="Series 2" field="corrosion"  labelFunction="displayCrane"/>-->
				</mx:series>
			</mx:PieChart>
			<mx:Legend dataProvider="{piechart1}"/>
			
			<!--ример, как можно мапить поколоночно содержимое ArrayCollection-->
			
			<s:List x="33" y="159" width="159" height="271" id="ilist" labelField="id" 
					>
			
				<s:dataProvider>
					<s:ArrayCollection>
						<fx:String>aaa</fx:String>
						<fx:String>bbb</fx:String>
						<fx:String>ccc</fx:String>
						<fx:String>ddd</fx:String>
					</s:ArrayCollection>
				</s:dataProvider>

			</s:List>
			
			<s:ComboBox id="idlist" x="545" y="13" labelField="id" change="idlist_changeHandler(event)">
				
			</s:ComboBox>
			<s:DropDownList id="droplist"  x="46" y="93" labelField="id" >
			</s:DropDownList>
			
			
		</s:NavigatorContent>
		<s:NavigatorContent label="er" width="100%" height="100%">
			
			<!--Практически идентично ColumnChart-->
			<mx:PlotChart x="299" y="22" id="plotchart1" showDataTips="true" width="563" itemClick="plotchart1_itemClickHandler(event)">
				<mx:horizontalAxis>
					<mx:CategoryAxis categoryField="id"/>
				</mx:horizontalAxis> 
								
				<mx:series>
					<mx:PlotSeries displayName="Коррозия"  xField="id" yField="corrosion"/>
					<mx:PlotSeries displayName="Вязкость"  xField="id" yField="viazkost"/>
					<mx:PlotSeries displayName="Срок"  xField="id" yField="srok"/>
				</mx:series>
			</mx:PlotChart>
			<mx:Legend dataProvider="{plotchart1}"/>
			<s:Label x="15" y="86" text="Label" width="246" height="99" id="help"/>
			
					
			
			
			
		</s:NavigatorContent>
	</mx:Accordion>
</s:Application>
